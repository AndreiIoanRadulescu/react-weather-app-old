{"version":3,"sources":["app_component/weather-component.jsx","app_component/form-component.jsx","App.js","serviceWorker.js","index.js"],"names":["Weather","props","className","city","country","humidity","temperature","temperatureMin","temperatureMax","scope","prognosis0","prognosis1","prognosis2","prognosis3","prognosis4","prognosis5","prognosis6","Form","type","name","autoComplete","placeholder","id","onClick","afiseazavremea","objectWithData","BucRo","numeTara","nume","temperatura","temperaturaMinMax","umiditate","prognoza","ConstRo","AleRo","AleEgi","BudHu","App","getWeather","e","preventDefault","target","parentNode","children","firstChild","classList","add","remove","orasInputat","value","taraInputata","nextSibling","response","Object","entries","forEach","v","setState","alert","undefined","state","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8d3633ef.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Weather = (props) => {\r\n  return (\r\n    <div className='container'>\r\n      <div className='cards'>\r\n        <h1>\r\n          {props.city}, {props.country}\r\n        </h1>\r\n        <div>\r\n          <h5 className='py-4 vreme'>Umiditate {props.humidity}</h5>\r\n          <h1 className='py-2'>{props.temperature}&deg;</h1>\r\n\r\n          <h3>\r\n            <span className='px-4'>{props.temperatureMin}&deg;</span> -\r\n            <span className='px-4'>{props.temperatureMax}&deg;</span>\r\n          </h3>\r\n        </div>\r\n\r\n        <table className='table d-none'>\r\n          <thead>\r\n            <tr>\r\n              <th scope='col'>Astazi</th>\r\n              <th scope='col'>Maine</th>\r\n              <th scope='col'>Poimaine</th>\r\n              <th scope='col'>Raspoimaine</th>\r\n              <th scope='col'>Peste 4 zile</th>\r\n              <th scope='col'>Peste 5 zile</th>\r\n              <th scope='col'>Peste 6 zile</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{props.prognosis0}</td>\r\n              <td>{props.prognosis1}</td>\r\n              <td>{props.prognosis2}</td>\r\n              <td>{props.prognosis3}</td>\r\n              <td>{props.prognosis4}</td>\r\n              <td>{props.prognosis5}</td>\r\n              <td>{props.prognosis6}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React from \"react\";\r\n\r\nconst Form = (props) => {\r\n  function afiseazaVremea(functie, e) {\r\n    e.preventDefault();\r\n    console.log(\"Vremea va fi afisata\");\r\n    functie();\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <form>\r\n        <div className='row'>\r\n          <div className='col-md-3 offset-md-2'>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='city'\r\n              autoComplete='off'\r\n              placeholder='Oras...'\r\n            />\r\n          </div>\r\n          <div className='col-md-3'>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='country'\r\n              autoComplete='off'\r\n              placeholder='Tara...'\r\n            />\r\n          </div>\r\n          <div className='col-md-3 mt-md-0 text-md-left'>\r\n            <button\r\n              className='btn btn-warning'\r\n              id='vreme'\r\n              onClick={props.afiseazavremea}\r\n            >\r\n              Afiseaza Vremea\r\n            </button>\r\n            <button\r\n              className='btn  btn-primary'\r\n              id='prognoza'\r\n              onClick={props.afiseazavremea}\r\n            >\r\n              Afiseaza Prognoza\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Weather from \"./app_component/weather-component\";\nimport Form from \"./app_component/form-component\";\n\nconst objectWithData = {\n  BucRo: {\n    numeTara: \"Romania\",\n    nume: \"Bucuresti\",\n    temperatura: 20,\n    temperaturaMinMax: [19, 22],\n    umiditate: \"Scazuta\",\n    prognoza: [\"soare\", \"nori\", \"ploaie\", \"viscol\", \"ceata\", \"ceata\", \"ceata\"],\n  },\n  ConstRo: {\n    numeTara: \"Romania\",\n    nume: \"Constanta\",\n    temperatura: 23,\n    temperaturaMinMax: [20, 25],\n    umiditate: \"Crescuta\",\n    prognoza: [\"soare\", \"soare\", \"nori\", \"ceata\", \"ceata\", \"ceata\", \"ceata\"],\n  },\n  AleRo: {\n    numeTara: \"Romania\",\n    nume: \"Alexandria\",\n    temperatura: 23,\n    temperaturaMinMax: [20, 25],\n    umiditate: \"Scazuta\",\n    prognoza: [\"soare\", \"ceata\", \"nori\", \"ceata\", \"ceata\", \"ceata\", \"nori\"],\n  },\n  AleEgi: {\n    numeTara: \"Egipt\",\n    nume: \"Alexandria\",\n    temperatura: 33,\n    temperaturaMinMax: [30, 35],\n    umiditate: \"Medie\",\n    prognoza: [\"soare\", \"soare\", \"soare\", \"soare\", \"ceata\", \"ceata\", \"ceata\"],\n  },\n  BudHu: {\n    numeTara: \"Ungaria\",\n    nume: \"Budapesta\",\n    temperatura: 15,\n    temperaturaMinMax: [14, 16],\n    umiditate: \"Medie\",\n    prognoza: [\"ceata\", \"nori\", \"nori\", \"ceata\", \"viscol\", \"viscol\", \"viscol\"],\n  },\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: \"Oras\",\n      country: \"Tara\",\n      temperature: \"0\",\n      temperatureMin: \"0\",\n      temperatureMax: \"0\",\n      humidity: undefined,\n      prognosis0: undefined,\n      prognosis1: undefined,\n      prognosis2: undefined,\n      prognosis3: undefined,\n      prognosis4: undefined,\n      prognosis5: undefined,\n      prognosis6: undefined,\n    };\n  }\n\n  componentDidMount() {}\n\n  getWeather = (e) => {\n    e.preventDefault();\n\n    if (e.target.id == \"vreme\") {\n      e.target.parentNode.parentNode.parentNode.parentNode.parentNode.children[1].firstChild.children[2].classList.add(\n        \"d-none\"\n      );\n      e.target.parentNode.parentNode.parentNode.parentNode.parentNode.children[1].firstChild.children[1].classList.remove(\n        \"d-none\"\n      );\n    }\n\n    if (e.target.id == \"prognoza\") {\n      e.target.parentNode.parentNode.parentNode.parentNode.parentNode.children[1].firstChild.children[2].classList.remove(\n        \"d-none\"\n      );\n      e.target.parentNode.parentNode.parentNode.parentNode.parentNode.children[1].firstChild.children[1].classList.add(\n        \"d-none\"\n      );\n    }\n\n    const orasInputat =\n      e.target.parentNode.parentNode.firstChild.firstChild.value;\n\n    const taraInputata =\n      e.target.parentNode.parentNode.firstChild.nextSibling.firstChild.value;\n\n    let response = null;\n\n    Object.entries(objectWithData).forEach((v) => {\n      if (v[1].nume == orasInputat && v[1].numeTara == taraInputata) {\n        response = v[1];\n      }\n    });\n\n    if (response) {\n      this.setState({\n        city: response.nume,\n        country: response.numeTara,\n        temperature: response.temperatura,\n        temperatureMin: response.temperaturaMinMax[0],\n        temperatureMax: response.temperaturaMinMax[1],\n        humidity: response.umiditate,\n        prognosis0: response.prognoza[0],\n        prognosis1: response.prognoza[1],\n        prognosis2: response.prognoza[2],\n        prognosis3: response.prognoza[3],\n        prognosis4: response.prognoza[4],\n        prognosis5: response.prognoza[5],\n        prognosis6: response.prognoza[6],\n      });\n    } else {\n      alert(\n        \"Din pacate aceasta combinatie de tara si oras nu exista in baza noastra de date\"\n      );\n\n      e.target.parentNode.parentNode.firstChild.firstChild.value = \"\";\n\n      e.target.parentNode.parentNode.firstChild.nextSibling.firstChild.value =\n        \"\";\n\n      this.setState({\n        city: \"Oras\",\n        country: \"Tara\",\n        temperature: 0,\n        temperatureMin: 0,\n        temperatureMax: 0,\n        humidity: undefined,\n        prognosis0: undefined,\n        prognosis1: undefined,\n        prognosis2: undefined,\n        prognosis3: undefined,\n        prognosis4: undefined,\n        prognosis5: undefined,\n        prognosis6: undefined,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <Form afiseazavremea={this.getWeather} />\n        <Weather\n          city={this.state.city}\n          country={this.state.country}\n          temperature={this.state.temperature}\n          temperatureMin={this.state.temperatureMin}\n          temperatureMax={this.state.temperatureMax}\n          humidity={this.state.humidity}\n          prognosis0={this.state.prognosis0}\n          prognosis1={this.state.prognosis1}\n          prognosis2={this.state.prognosis2}\n          prognosis3={this.state.prognosis3}\n          prognosis4={this.state.prognosis4}\n          prognosis5={this.state.prognosis5}\n          prognosis6={this.state.prognosis6}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}